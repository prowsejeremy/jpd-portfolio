name: JPD-frontend
services:
  nextjs:
    # Requires Dockerfile specified below to provide build context.
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    stdin_open: true
    tty: true
    # Ports can be exposed if you like, however we are using caddy to handle routing.
    # ports:
    #   - '3000:3000'
    hostname: jpd.test
    # node_modules is symlinked to a volume to avoid rebuilding with every hotload.
    volumes:
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    develop:
      watch:
        - action: sync
          path: ../
          target: /app
          ignore:
            - ../node_modules/
        - action: rebuild
          path: ../package.json
          target: /app
        - action: sync+restart
          path: ../next.config.js
          target: /app
    labels:
      # Define your app domain and port to be used by Caddy.
      caddy: jpd.test
      caddy.reverse_proxy: "{{upstreams 3000}}"
      caddy.tls: "internal"
    networks:
      - caddy

    # Ensure an env file has been created in the root of your project.
    env_file:
      - ../.env

networks:
  caddy:
    external: true

volumes:
  node_modules:
